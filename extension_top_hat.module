<?php
/**
 * @file extension_top_hat.module
 *
 * A module to implement the Extension Top Hat
 *
 */

/**
 * @file
 * Code for the Extension Top Hat feature.
 */

include_once 'extension_top_hat.features.inc';

/**
 * Implements hook_permssion()
 *
 * Permissions to configure top hat
 */
function extension_top_hat_permission(){
  return array('configure top hat' => array(
      'title'           => t('Configure OSU Top Hat'),
      'description'     => t('Configure the OSU Top Hat'),
    ),
  );
}

/**
 * Implementation of hook_menu()
 *
 * Add a link to the Site Configuration menu
 * And create a callback for our search form
 */
function extension_top_hat_menu() {
  $items = array();

  // Add our settings form to the Configuration -> Search and Metadata menu
  // The form is loaded from an include file
  $items['admin/appearance/osu-top-hat'] = array(
    'title'            => 'OSU Top Hat Settings',
    'description'      => 'Configure the Top Hat',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('extension_top_hat_settings'),
    'access arguments' => array('configure top hat'),
    'type'             => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_form()
 *
 * Top hat settings form
 */
function extension_top_hat_settings($form, &$form_state) {
  // Get saved settings
  $settings = variable_get('extension_top_hat_settings', array());
  // Option - Hide utiltity links
  $form['extension_top_hat_options']['hide_utility'] = array(
      '#type'          => 'checkbox',
      '#title'         => 'Hide utitlity links in Top Hat.',
      '#default_value' => isset($settings['hide_utility']) ? $settings['hide_utility'] : 1,
      '#description'   => t('Hide the "Calendar, Library, Maps..." links in the Top Hat'),
      );

  // Option - Display the search form
  $form['extension_top_hat_options']['show_search'] = array(
      '#type'          => 'checkbox',
      '#title'         => 'Show the search form in Top Hat.',
      '#default_value' => isset($settings['show_search']) ? $settings['show_search'] : 0,
      '#description'   => t('Show the search form in the Top Hat:. Requires the OSU Search module.'),
      );

  // Option - VSO Branding
  $form['extension_top_hat_options']['vso_option'] = array(
      '#type'          => 'checkbox',
      '#title'         => 'Use the VSO branding.',
      '#default_value' => isset($settings['vso_option']) ? $settings['vso_option'] : 0,
      '#description'   => t('Set the branding for voluntary organizations. This replaces the tag image with the words Oregon State University.'),
      );

			// Because we have many fields with the same values, we have to set
		  // #tree to be able to access them.
		  $form['#tree'] = TRUE;
		  $form['links_fieldset'] = array(
		    '#type' => 'fieldset',
		    '#title' => t('Top Hat Links'),
		    // Set up the wrapper so that AJAX will be able to replace the fieldset.
		    '#prefix' => '<div id="links-fieldset-wrapper">',
		    '#suffix' => '</div>',
		  );

		  // Build the fieldset with the proper number of links. We'll use
		  // $form_state['num_links'] to determine the number of textfields to build.
		  if (empty($form_state['num_links'])) {
		    $form_state['num_links'] = $settings['num_links'];
		  } 
		  for ($i = 0; $i < $form_state['num_links']; $i++) {
				$form['links_fieldset']['link_fieldset'][$i] = array(
			    '#type' => 'fieldset',
			    '#title' => 'Link ' . ($i+1),
			    // Set up the wrapper so that AJAX will be able to replace the fieldset.
			    '#prefix' => '<div class="link-fieldset-wrapper">',
			    '#suffix' => '</div>',
			  );
			
		    $form['links_fieldset']['link_fieldset'][$i]['title'] = array(
		      '#type' 				 => 'textfield',
					'#default_value' => isset($settings['links']['link_fieldset'][$i]['title']) ? $settings['links']['link_fieldset'][$i]['title'] : '',
		      '#title' 				 => t('Title'),
		    );
		
				$form['links_fieldset']['link_fieldset'][$i]['url'] = array(
		      '#type' 				 => 'textfield',
					'#default_value' => isset($settings['links']['link_fieldset'][$i]['url']) ? $settings['links']['link_fieldset'][$i]['url'] : '',
		      '#title' 				 => t('URL'),
		    );
	
		  }
		  $form['links_fieldset']['add_link'] = array(
		    '#type' => 'submit',
		    '#value' => t('Add'),
		    '#submit' => array('extension_top_hat_add_one'),
		    // See the examples in ajax_example.module for more details on the
		    // properties of #ajax.
		    '#ajax' => array(
		      'callback' => 'extension_top_hat_callback',
		      'wrapper' => 'links-fieldset-wrapper',
		    ),
		  );
		  if ($form_state['num_links'] > 1) {
		    $form['links_fieldset']['remove_link'] = array(
		      '#type' => 'submit',
		      '#value' => t('Remove'),
		      '#submit' => array('extension_top_hat_remove_one'),
		      '#ajax' => array(
		        'callback' => 'extension_top_hat_callback',
		        'wrapper' => 'links-fieldset-wrapper',
		      ),
		    );
		  }
		  $form['submit'] = array(
		    '#type' => 'submit',
		    '#value' => t('Save Settings'),
		  );


  return $form;
}

/**
 * Callback for both ajax-enabled buttons.
 *
 * Selects and returns the fieldset with the names in it.
 */
function extension_top_hat_callback($form, $form_state) {
  return $form['links_fieldset'];
}

/**
 * Submit handler for the "add-one-more" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function extension_top_hat_add_one($form, &$form_state) {
  $form_state['num_links']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * Submit handler for the "remove one" button.
 *
 * Decrements the max counter and causes a form rebuild.
 */
function extension_top_hat_remove_one($form, &$form_state) {
  if ($form_state['num_links'] > 1) {
    $form_state['num_links']--;
  }
  $form_state['rebuild'] = TRUE;
}

/**
 * Implements hook_form_submit()
 *
 */
function extension_top_hat_settings_submit($form, &$form_state){
	//dpm($form_state);
  // Create an array of our settings
  $settings = array(
    'hide_utility' => $form_state['values']['extension_top_hat_options']['hide_utility'],
    'show_search'  => $form_state['values']['extension_top_hat_options']['show_search'],
    'vso_option'   => $form_state['values']['extension_top_hat_options']['vso_option'],
		'links'				 => $form_state['values']['links_fieldset'],
		'num_links'		 => $form_state['num_links'],
  );

  // Write it to variables
  variable_set('extension_top_hat_settings', $settings);
  drupal_set_message('The settings have been saved.');

}




/**
 * Implements hook_init()
 *
 * Build the utiltiy menu if it doesn't exist
 *
 */
function extension_top_hat_init() {
  $menu = array(
      'menu_name'   => 'osu-top-hat',
      'title'       => t('OSU Top Hat'),
      'description' => t('The menu at the top of the page'),
      );
  menu_save($menu);

  $links = menu_load_links('osu-top-hat');

  if (empty($links)) {

    $item = array(
        'link_title'  => t('Calendar'),
        'link_path'   => 'http://calendar.oregonstate.edu',
        'menu_name'   => 'osu-top-hat',
        'weight'      => 1,
        );
    menu_link_save($item);

    $item = array(
        'link_title'  => t('Library'),
        'link_path'   => 'http://osulibrary.oregonstate.edu',
        'menu_name'   => 'osu-top-hat',
        'weight'      => 2,
        );
    menu_link_save($item);

    $item = array(
        'link_title'  => t('Maps'),
        'link_path'   => 'http://oregonstate.edu/campusmap',
        'menu_name'   => 'osu-top-hat',
        'weight'      => 3,
        );
    menu_link_save($item);

    $item = array(
        'link_title'  => t('Online Services'),
        'link_path'   => 'http://oregonstate.edu/main/online-services',
        'menu_name'   => 'osu-top-hat',
        'weight'      => 4,
        );
    menu_link_save($item);

    $item = array(
        'link_title'  => t('Make a Gift'),
        'link_path'   => 'http://osufoundation.org/giving/online_gift.shtml',
        'menu_name'   => 'osu-top-hat',
        'weight'      => 5,
        'options'     => array('attributes' => array('class' => array('campaign'))),
        );
    menu_link_save($item);

    // Update the menu router information.
    menu_rebuild();
  }
}

/**
 * Implements hook_block_info().
 *
 * Adds the block to the blocks admin page
 */
function extension_top_hat_block_info() {
 $blocks = array();
 $blocks['extension_top_hat'] = array(
   'info' => t('Extension Top Hat'),
	 'region' => 'top',
 );
 $blocks['extension_top_hat_links'] = array(
   'info' => t('Extension Top Hat Links'),
	 'region' => 'top',
 );
 return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Outputs the block itself
 */
function extension_top_hat_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'extension_top_hat':
      $block['content'] = extension_top_hat_content();
      break;
		case 'extension_top_hat_links':
	    $block['content'] = extension_top_hat_links_content();
	    break;
  }
  return $block;
}

/**
 * Function to call the theme
 *
 * Doesn't do much here but is a good example for the future when content may need to be pulled in
 */
function extension_top_hat_content() {
  global $base_url;

  // Get saved settings
  $settings = variable_get('extension_top_hat_settings', array());

  // Start the top hat
  $top_hat = "";


  if ($settings['vso_option']) {
    // Show VSO branding
    $top_hat .= "<p class='vso-standard-header'>";
    $top_hat .= "<span class='students-orange'>Students</span>";
    $top_hat .= " @ <a href='http://oregonstate.edu/'>Oregon State University</a></p>";
  }
  else {
    // Show Tag image
    $module_path = drupal_get_path('module', 'extension_top_hat');
    $tag_image = $base_url . '/' . $module_path  . '/images/osu-tag.png';
    $top_hat .= "<a href='http://oregonstate.edu' class='tag'>" .
        "<img src='" . $tag_image . "' class='logo' alt='Oregon State University' />" .
        "<span class='mobile-header'>OREGON STATE UNIVERSITY</span>" .
        "</a>";
  }

  // Utility links
  if (! $settings['hide_utility']) {
    $top_hat .= drupal_render(menu_tree('osu-top-hat'));
  }

  // Render the search form if it is installed and enabled
  if( $settings['show_search'] && function_exists('osu_search_top_hat_form')) {
    $top_hat .= render(drupal_get_form('osu_search_top_hat_form'));
  }

  // Close our divs
  $top_hat .= "";

  return $top_hat;
}

function extension_top_hat_links_content() {
	$settings = variable_get('extension_top_hat_settings', array());
	$fieldset = $settings['links']['link_fieldset'];
	foreach($fieldset as $link_num => $link) {
		if ($link_num == 0) $class = 'class="first"';
		$content .= '<a '.$class.' href="'.$link['url'].'">'.$link['title'].'</a>';
		$class = '';
	}
	return $content;
}